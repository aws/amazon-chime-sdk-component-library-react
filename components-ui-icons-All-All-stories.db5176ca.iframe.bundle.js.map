{"version":3,"file":"components-ui-icons-All-All-stories.db5176ca.iframe.bundle.js","mappings":";;;;;;;;;AA8HA;;;;ACnFA;AA3BA;;;AA8BA;;;;;;;;;;AACA;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AC1CA;AAIA;ACHA;AAIA;;;;ACgBA;;AA5BA;;;;AAIA;;;;AAIA;;AAqBA;;AAfA;;;;AAIA;;;;AAIA;;AAUA;AAGA;;AC3CA;;ACWA","sources":["webpack://amazon-chime-sdk-component-library-react/","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Flex/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/icons/Arrow/index.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/icons/Caret/index.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/icons/Caution/styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/icons/HandRaise/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/icons/Microphone/Styled.tsx"],"sourcesContent":[null,"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled, { css } from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../utils/style';\nimport { baseSpacing, baseStyles } from '../Base';\nimport { FlexProps } from './';\n\nexport const fillSpace = css`\n  display: flex;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const fillSpaceCentered = css`\n  ${fillSpace};\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const equalColumns = css`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  align-items: stretch;\n\n  > * {\n    flex-grow: 1;\n    flex-basis: 50%;\n  }\n`;\n\nexport const stack = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  > * {\n    width: 100%;\n  }\n`;\n\nconst layoutMap = {\n  'fill-space': fillSpace,\n  'fill-space-centered': fillSpaceCentered,\n  'equal-columns': equalColumns,\n  stack,\n};\n\nexport const StyledFlex = styled.div.withConfig(defaultStyledConfig)<FlexProps>`\n  align-items: ${(props) => props.alignItems};\n  display: ${(props) => (props.container ? 'flex' : 'block')};\n  flex: ${(props) => props.flex || ''};\n  flex-basis: ${(props) => props.flexBasis};\n  flex-direction: ${(props) => props.flexDirection};\n  flex-grow: ${(props) => props.flexGrow || ''};\n  flex-shrink: ${(props) => props.flexShrink};\n  flex-wrap: ${(props) => props.flexWrap};\n  justify-content: ${(props) => props.justifyContent};\n\n  // layout variants\n  ${(props) => !!props.layout && layoutMap[props.layout]}\n\n  ${baseSpacing}\n  ${baseStyles}\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { Direction } from '../../../../types';\nimport { defaultStyledConfig } from '../../../../utils/style';\nimport Svg, { SvgProps } from '../Svg';\n\nconst dirTransform = {\n  up: '0',\n  right: '90',\n  down: '180',\n  left: '270',\n};\n\ninterface ArrowProps extends SvgProps {\n  /** Defines the direction of the arrow. */\n  direction?: Direction;\n}\n\nconst StyledArrow = styled(Svg).withConfig(defaultStyledConfig)<ArrowProps>`\n  transform: ${({ direction }) =>\n    `rotate(${dirTransform[direction || 'up']}deg)`};\n`;\n\nexport const Arrow: React.FC<React.PropsWithChildren<ArrowProps>> = ({\n  direction = 'up',\n  ...rest\n}) => (\n  <StyledArrow direction={direction} {...rest}>\n    <path\n      transform-origin=\"center\"\n      d=\"M16.85 10.53l-4.495-4.39c-.094-.09-.214-.132-.335-.136C12.013 6.003 12.007 6 12 6c-.006 0-.012.003-.02.004-.12.004-.24.047-.334.137L7.15 10.53c-.197.193-.201.51-.008.707.098.1.228.15.357.15.126 0 .252-.046.35-.141l3.646-3.56v9.812c0 .277.223.5.5.5.276 0 .5-.223.5-.5V7.677l3.655 3.57c.097.095.223.142.349.142.13 0 .26-.05.358-.151.193-.197.189-.514-.008-.707\"\n    />\n  </StyledArrow>\n);\n\nArrow.displayName = 'Arrow';\n\nexport default Arrow;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { Direction } from '../../../../types';\nimport { defaultStyledConfig } from '../../../../utils/style';\nimport Svg, { SvgProps } from '../Svg';\n\nconst dirTransform = {\n  up: '0',\n  right: '90',\n  down: '180',\n  left: '270',\n};\n\ninterface CaretProps extends SvgProps {\n  /** Defines the direction of the caret. */\n  direction?: Direction;\n  className?: string;\n}\n\nconst StyledCaret = styled(Svg).withConfig(defaultStyledConfig)<CaretProps>`\n  transform: ${({ direction }) =>\n    `rotate(${dirTransform[direction || 'up']}deg)`};\n`;\n\nexport const Caret: React.FC<React.PropsWithChildren<CaretProps>> = ({\n  direction = 'up',\n  ...rest\n}) => {\n  return (\n    <StyledCaret direction={direction} {...rest}>\n      <path\n        transform-origin=\"center\"\n        d=\"M8.824 13.88c-.21.18-.526.154-.705-.056-.159-.187-.156-.457-.006-.64l.063-.065 3.523-3c.165-.14.397-.156.577-.05l.074.052 3.477 3c.209.18.232.497.052.706-.16.185-.428.224-.632.104l-.074-.052-3.151-2.72-3.198 2.722z\"\n      />\n    </StyledCaret>\n  );\n};\n\nCaret.displayName = 'Caret';\n\nexport default Caret;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled, { css } from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../../utils/style';\nimport { CautionProps } from './';\n\nconst defaultStyle = css`\n  .ch-caution-background {\n    fill: transparent;\n  }\n`;\n\nconst warningStyle = css`\n  .ch-caution-background {\n    fill: ${(props) => props.theme.colors.warning.primary};\n  }\n\n  .ch-caution-exclamation {\n    fill: ${(props) => props.theme.colors.greys.white};\n  }\n\n  .ch-caution-border {\n    fill: ${(props) => props.theme.colors.warning.primary};\n  }\n`;\n\nconst errorStyle = css`\n  .ch-caution-background {\n    fill: ${(props) => props.theme.colors.error.primary};\n  }\n\n  .ch-caution-exclamation {\n    fill: ${(props) => props.theme.colors.greys.white};\n  }\n\n  .ch-caution-border {\n    fill: ${(props) => props.theme.colors.error.primary};\n  }\n`;\n\nconst variantMap = {\n  default: defaultStyle,\n  'fill-warning': warningStyle,\n  'fill-error': errorStyle,\n};\n\nexport const StyledCaution = styled.g.withConfig(\n  defaultStyledConfig\n)<CautionProps>`\n  ${(props) => variantMap[props.variant || 'default']};\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../../utils/style';\n\nexport const StyledCircle = styled.circle.withConfig(defaultStyledConfig)`\n  fill: ${(props) => props.theme.colors.primary.main};\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../../utils/style';\nimport Svg from '../Svg';\nimport { MicrophoneProps } from './';\n\nconst SvgWithoutMicrophoneProps = ({\n  poorConnection,\n  muted,\n  ...rest\n}: MicrophoneProps) => <Svg {...rest} />;\n\nexport const StyledSvg = styled(SvgWithoutMicrophoneProps).withConfig(\n  defaultStyledConfig\n)<MicrophoneProps>`\n  ${(props) =>\n    props.poorConnection ? `color: ${props.theme.colors.error.light}` : ''}\n`;\n"],"names":[],"sourceRoot":""}