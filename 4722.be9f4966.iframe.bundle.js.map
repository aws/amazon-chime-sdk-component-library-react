{"version":3,"file":"4722.be9f4966.iframe.bundle.js","mappings":";AAkBA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmBA;;;AAMA;AACA;;;;;;;;ACxBA;;;;;ACNA;AACA;AAGA;;;AAKA;AACA;;;;;;AAMA;;;;;AAKA;AACA;AACA;;;AAGA;;;;AAIA;AACA;;;;AAIA;;;;;;;;;AASA;;;;;AAKA;;;;;;;;AAQA;AACA;;;AAGA;;;;;;;;;;;;;;;;AAgBA;;;;AAIA;;;;;;AAMA;;;AAIA;;;;;;;;;;AAUA;AACA;;AAEA;;;AAGA;;;;AAIA;AACA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;;;;AAKA;;;;AAIA;AACA;;;AAGA;;;;;;;;;;;;;;;;;AAiBA;;;;AAIA;;;;;;AAMA;;;AAIA;;;;;;;;;;ACzLA;;;;AAIA;;;AAGA;AACA;AAGA;AAGA;;;;AAIA;;;AAGA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;;;;;;;;;;;;;;;;;AAiBA;AACA;AAGA;;;;AAIA;;;;;;;;;AASA;;;AAGA;;;;;AAKA;;;;;AAKA;;;;AAIA;;;;AAIA;;;;;;;;;;AClHA;AAGA;;;;;;;;;;;;AAYA;AACA;;;;;;;;;AASA;;;;;;;;;;;;ACvBA;;;;;AAKA;;;;;;;;;;AAUA;;;;;AAKA;AACA;;;;AAMA;AAGA;;;;;;;AAOA;AACA;AAEA;AACA;;;AAGA;;;AAGA;AACA;;AC9DA;;;AAGA;AACA;;AAIA;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;ACtCA;AAGA;;;;;ACKA;AACA;AACA;;AAEA;;AAaA;AAGA;AACA;AACA;;AAEA;;;;;ACzBA;;;;;;;;;;;;AAaA;;;AAKA;;;;;;;;;;;AAaA;AACA;;;;;AAOA;;;;;AAKA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;;;AAgBA;AACA;;;;;;AChEA;AACA;;AAEA;;;;;;;;;;;;;;AAcA;AACA;;;;;;;;;AASA;;AAEA;;;AAGA;AACA;AACA;AAEA;;;AAIA;AACA;AAEA;;;AAIA;AACA;AAEA;;;AAIA;AACA;;;;;;;;;AChEA;;;;;;;;;ACFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAWA;AACA;;;;;AAKA;AACA;;;AAGA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;;;;;AAKA;AACA;;;ACjBA;AAEA;;;AAGA","sources":["webpack://amazon-chime-sdk-component-library-react/./src/components/sdk/LocalVideo/index.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/MicVolumeIndicator/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/sdk/PreviewVideo/index.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Chat/ChannelList/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Chat/ChatBubble/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Chat/InfiniteList/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Chat/MessageAttachment/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Checkbox/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/ContentTile/index.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Grid/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Navbar/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Notification/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/NotificationGroup/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Select/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Textarea/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/UserActivityManager/Styled.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nimport { useApplyVideoObjectFit } from '../../../hooks/useApplyVideoObjectFit';\nimport { useAudioVideo } from '../../../providers/AudioVideoProvider';\nimport { useLocalVideo } from '../../../providers/LocalVideoProvider';\nimport VideoTile from '../../ui/VideoTile';\nimport { BaseSdkProps } from '../Base';\n\ninterface Props extends BaseSdkProps {\n  id?: string;\n  nameplate?: string;\n}\n\nconst StyledLocalVideo = styled<any>(VideoTile)`\n  ${(props) => (!props.active ? 'display: none' : '')};\n`;\n\nexport const LocalVideo: React.FC<React.PropsWithChildren<Props>> = ({\n  nameplate,\n  ...rest\n}) => {\n  const { tileId, isVideoEnabled } = useLocalVideo();\n  const audioVideo = useAudioVideo();\n  const videoEl = useRef<HTMLVideoElement>(null);\n  useApplyVideoObjectFit(videoEl);\n\n  useEffect(() => {\n    if (!audioVideo || !tileId || !videoEl.current || !isVideoEnabled) {\n      return;\n    }\n\n    audioVideo.bindVideoElement(tileId, videoEl.current);\n\n    return () => {\n      const tile = audioVideo.getVideoTile(tileId);\n      if (tile) {\n        audioVideo.unbindVideoElement(tileId);\n      }\n    };\n  }, [audioVideo, tileId, isVideoEnabled]);\n\n  return (\n    <StyledLocalVideo\n      active={isVideoEnabled}\n      nameplate={nameplate}\n      ref={videoEl}\n      {...rest}\n    />\n  );\n};\n\nexport default LocalVideo;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../utils/style';\nimport { baseSpacing, baseStyles } from '../Base';\nimport { MicVolumeIndicatorProps } from '.';\n\nexport const StyledMicVolumeIndicator = styled.div.withConfig(\n  defaultStyledConfig\n)<MicVolumeIndicatorProps>`\n  position: relative;\n  height: inherit;\n  line-height: 0;\n\n  .ch-mic-icon {\n    position: relative;\n    z-index: 2;\n    width: 100%;\n  }\n\n  .ch-bg-volume-wrapper {\n    position: absolute;\n    bottom: 41%;\n    left: 40%;\n    height: 38%;\n    width: 21%;\n    border-radius: 20%;\n    overflow: hidden;\n  }\n\n  .ch-bg-volume-fill {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    transform-origin: bottom;\n    will-change: transform;\n    background-color: ${(props) =>\n      props.signalStrength && props.signalStrength <= 0.5\n        ? props.theme.colors.error.light\n        : props.theme.colors.primary.light};\n  }\n\n  ${baseSpacing}\n  ${baseStyles}\n`;\n\nexport default StyledMicVolumeIndicator;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nimport { useAudioVideo } from '../../../providers/AudioVideoProvider';\nimport { useVideoInputs } from '../../../providers/DevicesProvider';\nimport { useLocalVideo } from '../../../providers/LocalVideoProvider';\nimport { useLogger } from '../../../providers/LoggerProvider';\nimport { useMeetingManager } from '../../../providers/MeetingProvider';\nimport VideoTile from '../../ui/VideoTile';\nimport { BaseSdkProps } from '../Base';\n\nconst StyledPreview = styled(VideoTile)`\n  height: auto;\n  background: unset;\n\n  video {\n    position: static;\n  }\n`;\n\nexport const PreviewVideo: React.FC<React.PropsWithChildren<BaseSdkProps>> = (\n  props\n) => {\n  const logger = useLogger();\n  const audioVideo = useAudioVideo();\n  const { selectedDevice } = useVideoInputs();\n  const videoEl = useRef<HTMLVideoElement>(null);\n  const meetingManager = useMeetingManager();\n  const { setIsVideoEnabled } = useLocalVideo();\n\n  useEffect(() => {\n    const videoElement = videoEl.current;\n    return () => {\n      if (videoElement) {\n        audioVideo?.stopVideoPreviewForVideoInput(videoElement);\n        audioVideo?.stopVideoInput();\n        setIsVideoEnabled(false);\n      }\n    };\n  }, [audioVideo]);\n\n  useEffect(() => {\n    async function startPreview(): Promise<void> {\n      if (!audioVideo || !selectedDevice || !videoEl.current) {\n        return;\n      }\n\n      try {\n        await meetingManager.startVideoInputDevice(selectedDevice);\n        audioVideo.startVideoPreviewForVideoInput(videoEl.current);\n        setIsVideoEnabled(true);\n      } catch (error) {\n        logger.error('Failed to start video preview');\n      }\n    }\n\n    startPreview();\n  }, [audioVideo, selectedDevice]);\n\n  return <StyledPreview {...props} ref={videoEl} />;\n};\n\nexport default PreviewVideo;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../../utils/style';\nimport { baseSpacing, baseStyles } from '../../Base';\nimport { ChannelListProps } from '.';\nimport { ChannelItemProps } from './ChannelItem';\n\nexport const StyledChannelList = styled.ul.withConfig(\n  defaultStyledConfig\n)<ChannelListProps>`\n  display: flex;\n  flex-direction: column;\n  width: 20rem;\n\n  ${baseStyles}\n  ${baseSpacing}\n`;\n\nexport const StyledChannelItem = styled.li.withConfig(\n  defaultStyledConfig\n)<ChannelItemProps>`\n  position: relative;\n\n  ${baseStyles};\n  ${baseSpacing};\n\n  & .ch-channel-button {\n    width: 100%;\n    height: 100%;\n    padding: 11px 0;\n    background-color: ${(props) => props.theme.channelList.bgd};\n    border: none;\n    border-radius: unset;\n    justify-content: left;\n    padding-left: 1rem;\n    color: ${(props) => props.theme.channelList.fontColor};\n    border: ${(props) => props.theme.channelList.border};\n    font-family: ${(props) => props.theme.fonts.body};\n\n    &:hover {\n      background-color: ${(props) => props.theme.channelList.hover.bgd};\n    }\n\n    &:active {\n      background-color: ${(props) => props.theme.channelList.active.bgd};\n      color: ${(props) => props.theme.channelList.active.fontColor};\n    }\n\n    &:focus {\n      border: ${(props) => props.theme.channelList.focus.border};\n    }\n  }\n\n  & .ch-label {\n    padding-left: 1.5rem;\n  }\n\n  & .ch-unread-badge {\n    display: ${(props) => (props.unread ? 'inline' : 'none')};\n    position: absolute;\n    z-index: 2;\n    top: 12px;\n    left: 5px;\n    background-color: ${(props) => props.theme.colors.primary.light};\n  }\n\n  &.ch-unread .ch-channel-button {\n    font-weight: bold;\n  }\n\n  &.ch-selected .ch-channel-button {\n    background-color: ${(props) => props.theme.colors.primary.light};\n    color: ${(props) => props.theme.channelList.selected.fontColor};\n\n    &:focus {\n      border: ${(props) => props.theme.channelList.focus.selectedBorder};\n    }\n  }\n\n  & .ch-popover-toggle {\n    position: absolute;\n    right: 1rem;\n    margin: 0.5rem 0;\n    height: 1.5rem;\n    border-radius: 50%;\n\n    .ch-channel-actions {\n      border: 1px solid transparent;\n    }\n\n    & g {\n      fill: ${(props) => props.theme.channelList.active.fontColor};\n    }\n\n    & button:focus .ch-channel-actions {\n      border: ${(props) => props.theme.channelList.focus.selectedBorder};\n      border-radius: 50%;\n    }\n\n    &:hover,\n    &:active {\n      background-color: ${(props) =>\n        props.theme.channelList.iconButton.activeBgd};\n\n      & g {\n        fill: ${(props) => props.theme.colors.primary.light};\n      }\n    }\n  }\n\n  & .ch-detailed-channel {\n    display: grid;\n    grid-template-rows: 17px 1fr max-content;\n    grid-gap: 16px;\n    padding: 10px 20px;\n    background-color: ${(props) => props.theme.channelList.bgd};\n    color: ${(props) => props.theme.channelList.fontColor};\n    border-bottom: 0.5px solid #d3d3d3;\n    font-family: ${(props) => props.theme.fonts.body};\n\n    &:hover {\n      background-color: ${(props) => props.theme.channelList.hover.bgd};\n    }\n\n    &:active {\n      background-color: ${(props) => props.theme.channelList.active.bgd};\n      color: ${(props) => props.theme.channelList.active.fontColor};\n    }\n\n    &:focus {\n      border: ${(props) => props.theme.channelList.focus.border};\n    }\n  }\n\n  & .ch-detailed-channel-name {\n    font-weight: bold;\n    padding-left: 25px;\n    white-space: nowrap;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    font-size: 14px;\n    max-width: 85%;\n  }\n\n  & .ch-detailed-channel-message {\n    grid-row: span 2;\n    padding-left: 25px;\n    white-space: nowrap;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    font-size: 14px;\n    max-width: 90%;\n  }\n\n  & .ch-detailed-channel-message-time {\n    position: absolute;\n    top: 0.8rem;\n    right: 0.5rem;\n    font-size: 8px;\n    max-width: 15%;\n    text-align: right;\n  }\n\n  & .ch-unread-badge-detailed {\n    display: ${(props) => (props.unread ? 'inline' : 'none')};\n    position: absolute;\n    z-index: 2;\n    top: 10px;\n    left: 5px;\n    background-color: ${(props) => props.theme.colors.primary.light};\n  }\n\n  &.ch-selected .ch-detailed-channel {\n    background-color: ${(props) => props.theme.colors.primary.light};\n    color: ${(props) => props.theme.channelList.selected.fontColor};\n\n    &:focus {\n      border: ${(props) => props.theme.channelList.focus.selectedBorder};\n    }\n  }\n\n  & .ch-popover-toggle-detailed {\n    position: absolute;\n    top: 1.75rem;\n    right: 1rem;\n    margin: 0.5rem 0;\n    height: 1.5rem;\n    border-radius: 50%;\n\n    .ch-channel-actions {\n      border: 1px solid transparent;\n    }\n\n    & g {\n      fill: ${(props) => props.theme.channelList.active.fontColor};\n    }\n\n    & button:focus .ch-channel-actions {\n      border: ${(props) => props.theme.channelList.focus.selectedBorder};\n      border-radius: 50%;\n    }\n\n    &:hover,\n    &:active {\n      background-color: ${(props) =>\n        props.theme.channelList.iconButton.activeBgd};\n\n      & g {\n        fill: ${(props) => props.theme.colors.primary.light};\n      }\n    }\n  }\n`;\n\nexport default StyledChannelList;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../../utils/style';\nimport { BaseProps, baseSpacing, baseStyles } from '../../Base';\nimport { MessageVariant } from './ChatBubbleContainer';\n\ninterface StyledChatBubbleContainerProps extends BaseProps {\n  actions?: any;\n}\n\ninterface StyledChatBubbleProps extends BaseProps {\n  variant: MessageVariant;\n  editable?: boolean;\n}\n\nexport const StyledChatBubbleContainer = styled.div.withConfig(\n  defaultStyledConfig\n)<StyledChatBubbleContainerProps>`\n  display: flex;\n  flex-direction: row;\n  font-size: 0.65rem;\n  margin-left: 1rem;\n  align-items: center;\n  background-color: ${(props) => props.theme.chatBubble.container.bgd};\n  width: 100%;\n\n  .ch-timestamp {\n    padding-right: ${(props) => (props.actions ? '1rem' : '2.5rem')};\n  }\n\n  ${baseSpacing}\n  ${baseStyles}\n`;\n\nexport const StyledChatBubble = styled.div.withConfig(\n  defaultStyledConfig\n)<StyledChatBubbleProps>`\n  background-color: ${(props) => props.theme.chatBubble[props.variant].bgd};\n  padding: 0.625rem 1rem;\n  border-radius: 4px;\n  width: fit-content;\n  color: ${(props) => props.theme.chatBubble[props.variant].fontColor};\n  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.1);\n  line-height: 20px;\n  width: ${(props) => (props.editable ? '100%' : 'fit-content')};\n  max-width: 70.6%;\n  font-size: 0.875rem;\n  position: relative;\n  margin-bottom: ${(props) => (props.editable ? '4rem' : 'unset')};\n  overflow-wrap: break-word;\n  word-break: break-word;\n  hyphens: auto;\n\n  & .ch-header {\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 0.5rem;\n    align-items: baseline;\n  }\n\n  & .ch-sender-name {\n    font-weight: bold;\n    padding-right: 0.5rem;\n  }\n\n  & .ch-header-timestamp {\n    font-size: 0.65rem;\n  }\n\n  & svg {\n    position: absolute;\n    height: 19px;\n    width: 11px;\n    margin-top: -14px;\n    margin-left: -25px;\n\n    & .ch-chat-bubble-tail {\n      fill: ${(props) => props.theme.chatBubble[props.variant].bgd};\n    }\n  }\n\n  .ch-input {\n    width: 100%;\n  }\n\n  .ch-edit-buttons {\n    position: absolute;\n    margin-top: 1rem;\n    display: flex;\n    flex-direction: row-reverse;\n    width: 10rem;\n    justify-content: space-between;\n  }\n\n  ${baseSpacing};\n  ${baseStyles};\n`;\n\nexport const StyledChatBubbleInfo = styled.div.withConfig(defaultStyledConfig)`\n  display: flex;\n  margin-right: 0.5rem;\n  margin-left: auto;\n  color: ${(props) => props.theme.chatBubble.container.fontColor};\n  align-items: center;\n\n  & .ch-message-actions {\n    border: 1px solid transparent;\n    border-radius: 50%;\n  }\n\n  & button:hover .ch-message-actions {\n    background-color: ${(props) => props.theme.buttons.icon.hover.bgd};\n\n    & g {\n      fill: ${(props) => props.theme.buttons.icon.hover.text};\n    }\n  }\n\n  & button:focus .ch-message-actions {\n    border: 1px solid ${(props) => props.theme.colors.primary.dark};\n    border-radius: 50%;\n  }\n\n  & .ch-message-actions g {\n    fill: ${(props) => props.theme.chatBubble.container.fontColor};\n  }\n\n  & .ch-message-actions.isOpen {\n    background-color: ${(props) => props.theme.buttons.icon.active.bgd};\n    border-radius: 50%;\n\n    & g {\n      fill: ${(props) => props.theme.buttons.icon.active.text};\n    }\n  }\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled, { keyframes } from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../../utils/style';\nimport { baseSpacing, baseStyles } from '../../Base';\nimport { InfiniteListProps } from './';\n\n// Create the keyframes\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\ninterface StyledInfiniteListProps extends InfiniteListProps {}\n\nexport const StyledInfiniteList = styled.ul.withConfig(\n  defaultStyledConfig\n)<StyledInfiniteListProps>`\n  background-color: ${(props) => props.theme.chatBubble.container.bgd};\n  overflow-y: scroll;\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  padding: 0;\n\n  /* disable scrolling while fetching */\n  &.ch-not-scrollable {\n    overflow-y: hidden;\n  }\n\n  ${baseSpacing}\n  ${baseStyles}\n\n  .ch-spinner {\n    margin: 0 auto;\n  }\n\n  .ch-spinner svg {\n    width: 2rem;\n    height: 2rem;\n    animation: ${rotate} 2s linear infinite;\n    display: block;\n  }\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../../utils/style';\nimport { BaseProps, baseSpacing, baseStyles } from '../../Base';\n\ninterface StyledMessageAttachmentProps extends BaseProps {\n  imgStyles?: string;\n}\n\nexport const StyledMessageAttachmentContent = styled.div.withConfig(\n  defaultStyledConfig\n)`\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n\n  & .ch-attachment-icon {\n    height: 2rem;\n    width: 2rem;\n    margin: auto;\n    background-color: ${(props) => props.theme.messageAttachment.icon.bgd};\n    border-radius: 25px;\n\n    & .ch-document-icon {\n      margin: auto 0;\n      color: ${(props) => props.theme.messageAttachment.icon.color};\n    }\n  }\n  & .ch-attachment-name {\n    margin-left: 1rem;\n\n    & a:link,\n    & a:visited,\n    & a:hover,\n    & a:active {\n      color: ${(props) => props.theme.messageAttachment.name.fontColor};\n      text-decoration: none;\n    }\n  }\n  & .ch-attachment-size {\n    font-size: ${(props) => props.theme.messageAttachment.size.fontSize};\n    color: ${(props) => props.theme.messageAttachment.size.fontColor};\n    display: block;\n    padding-top: 3px;\n  }\n`;\n\nexport const StyledMessageAttachment = styled.div.withConfig(\n  defaultStyledConfig\n)<StyledMessageAttachmentProps>`\n  color: ${(props) => props.theme.messageAttachment.content.fontColor};\n  display: flex;\n  flex-direction: column;\n  width: fit-content;\n  border-radius: 4px;\n  overflow: hidden;\n  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.1);\n  background-color: ${(props) => props.theme.messageAttachment.content.bgd};\n  letter-spacing: ${(props) =>\n    props.theme.messageAttachment.content.letterSpacing};\n  font-size: ${(props) => props.theme.fontSizes.text.fontSize};\n  line-height: ${(props) => props.theme.fontSizes.text.lineHeight};\n\n  & img {\n    ${(props) => props.imgStyles};\n  }\n\n  ${baseSpacing}\n  ${baseStyles}\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { defaultStyledConfig, visuallyHidden } from '../../../utils/style';\nimport { StyledCheckboxProps } from './';\n\nexport const HiddenCheckbox = styled.input.withConfig(defaultStyledConfig)`\n  ${visuallyHidden};\n\n  &[aria-invalid='true'] + .ch-checkbox {\n    border: ${(props) => props.theme.inputs.error.border};\n    box-shadow: ${(props) => props.theme.inputs.error.shadow};\n  }\n`;\n\nexport const StyledCheckbox = styled.div.withConfig(\n  defaultStyledConfig\n)<StyledCheckboxProps>`\n  background-color: ${(props) => props.theme.inputs.bgd};\n  border: ${(props) => props.theme.inputs.border};\n  border-radius: ${(props) => props.theme.radii.default};\n  box-shadow: ${(props) => props.theme.inputs.shadow};\n  color: ${(props) => props.theme.inputs.fontColor};\n  display: inline-block;\n  height: 1rem;\n  position: relative;\n  width: 1rem;\n  transition: box-shadow 0.05s ease-in;\n\n  > svg {\n    left: -0.03125rem;\n    position: absolute;\n    transform: scale(1.5);\n  }\n\n  ${HiddenCheckbox}:checked ~ & {\n    background-color: ${(props) => props.theme.inputs.checked.bgd};\n    border: ${(props) => props.theme.inputs.checked.border};\n    box-shadow: ${(props) => props.theme.inputs.checked.shadow};\n    color: ${(props) => props.theme.inputs.checked.fontColor};\n  }\n\n  ${HiddenCheckbox}:focus ~ & {\n    border: ${(props) => props.theme.inputs.focus.border};\n    box-shadow: ${(props) => props.theme.inputs.focus.shadow};\n  }\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { VideoTile } from '../../ui/VideoTile';\n\nexport const ContentTile = styled(VideoTile)`\n  background-color: ${({ theme }) => theme.colors.greys.grey80};\n`;\n\nexport default ContentTile;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\nimport { grid } from 'styled-system';\n\nimport { defaultStyledConfig } from '../../../utils/style';\nimport { baseSpacing, baseStyles } from '../Base';\nimport { GridProps } from './';\nimport { CellProps } from './Cell';\n\nexport const StyledGrid = styled.div.withConfig(defaultStyledConfig)<GridProps>`\n  display: grid;\n  width: 100%;\n  height: 100%;\n\n  ${grid}\n  ${baseSpacing}\n  ${baseStyles}\n\n  ${({ responsive, theme }) =>\n    responsive\n      ? `\n    ${theme.mediaQueries.max.md} {\n      grid-template-columns: 1fr 1fr;\n    }\n\n    ${theme.mediaQueries.max.sm} {\n      grid-template-columns: 1fr;\n    }\n  `\n      : ''}\n\n  ${(props) => props.css || ''}\n`;\n\nexport const StyledCell = styled.div.withConfig(defaultStyledConfig)<CellProps>`\n  ${baseSpacing}\n  ${grid}\n\n  ${(props) => props.css || ''}\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../utils/style';\nimport { baseSpacing, baseStyles } from '../Base';\nimport Flex from '../Flex';\nimport { NavbarProps } from '.';\nimport { NavbarItemProps } from './NavbarItem';\n\nexport const StyledHeader = styled.div.withConfig(defaultStyledConfig)`\n  display: flex;\n  height: 3rem;\n  align-items: center;\n  border-bottom: ${({ theme }) =>\n    `0.03125rem solid ${theme.navbar.headerBorder}`};\n  padding: 1rem;\n\n  .ch-title {\n    flex: 1;\n  }\n\n  .ch-btn-close {\n    margin-left: auto;\n    margin-right: 1rem;\n  }\n\n  ${({ theme }) => theme.mediaQueries.min.md} {\n    display: none;\n  }\n`;\n\nexport const StyledNavbarItem = styled.div.withConfig(defaultStyledConfig)<\n  Partial<NavbarItemProps>\n>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 4.25rem;\n  min-height: 3rem;\n  flex-direction: column;\n  padding: 0 0.25rem;\n\n  .ch-navigation-bar-item-label {\n    text-align: center;\n    display: ${({ showLabel }) => (showLabel ? 'block' : 'none')};\n    font-size: ${({ theme }) => theme.fontSizes.footnote.fontSize};\n    width: 100%;\n    padding: 0 0.25rem;\n    margin-bottom: 1.5rem;\n  }\n`;\n\nexport const StyledNavbar = styled(Flex)<NavbarProps>`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  max-width: 100%;\n  color: ${(props) => props.theme.navbar.text};\n  background-color: ${({ theme }) => theme.navbar.bgd};\n  width: 4.25rem;\n  padding-top: 1rem;\n\n  ${({ theme, responsive }) => theme.mediaQueries.max.md} {\n    width: ${(props) => (props.responsive ? `20rem` : `4.25rem;`)};\n    padding-top: ${(props) => (props.responsive ? `0` : `1rem`)};\n\n    ${StyledHeader} {\n      display: ${(props) => (props.responsive ? `flex` : `none`)};\n    }\n\n    ${StyledNavbarItem} {\n      ${(props) =>\n        props.responsive &&\n        ` \n        width: auto;\n        flex-direction: row;\n\n        .ch-navigation-bar-item-label {\n          font-size: 1rem;\n          text-align: left;\n          margin-left: 1.5rem;\n          margin-bottom: 0;\n          display: block;\n        }`};\n    }\n  }\n\n  ${baseStyles}\n  ${baseSpacing}\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { Severity } from '../../../providers/NotificationProvider';\nimport { defaultStyledConfig } from '../../../utils/style';\nimport { baseSpacing, baseStyles } from '../Base';\nimport IconButton from '../Button/IconButton';\nimport SecondaryButton from '../Button/SecondaryButton';\nimport { NotificationProps } from '.';\n\ninterface StyledNotificationProps extends NotificationProps {\n  severity: Severity;\n}\n\nexport const StyledCloseIconButton = styled(IconButton)``;\nexport const StyledNotificationButton = styled(SecondaryButton)``;\n\nexport const StyledNotification = styled.div.withConfig(\n  defaultStyledConfig\n)<StyledNotificationProps>`\n  align-items: center;\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  color: ${({ theme, severity }) => theme.notification[severity].text};\n  background-color: ${({ theme, severity }) => theme.colors[severity].primary};\n  padding: 0.75rem;\n  box-shadow: ${({ theme }) => theme.notification.shadow};\n  border-radius: 0.25rem;\n  margin: 0.75rem;\n  max-width: 45rem;\n  pointer-events: auto;\n\n  .ch-severity-icon {\n    width: 1.5rem;\n    flex-shrink: 0;\n  }\n\n  .ch-message {\n    display: flex;\n    flex-flow: column wrap;\n    font-size: ${(props) => props.theme.fontSizes.text.fontSize};\n    line-height: ${(props) => props.theme.fontSizes.text.lineHeight};\n    letter-spacing: -0.005625rem;\n    margin: 0.5rem 0.75rem;\n\n    &:empty {\n      margin: 0;\n    }\n  }\n\n  ${StyledNotificationButton} {\n    margin-right: 1.6rem;\n    border-color: ${({ theme, severity }) => theme.notification[severity].text};\n  }\n\n  ${StyledCloseIconButton},\n  ${StyledNotificationButton} {\n    background-color: ${({ theme, severity }) =>\n      theme.colors[severity].primary};\n    color: ${({ theme, severity }) =>\n      theme.notification[severity].closeButton.text};\n  }\n\n  ${StyledCloseIconButton}:hover, ${StyledCloseIconButton}:focus, ${StyledNotificationButton}:hover, ${StyledNotificationButton}:focus {\n    background-color: ${({ theme, severity }) =>\n      theme.notification[severity].closeButton.hover.bgd};\n    color: ${({ theme, severity }) =>\n      theme.notification[severity].closeButton.hover.text};\n  }\n\n  ${StyledCloseIconButton}:active, ${StyledNotificationButton}:active {\n    background-color: ${({ theme, severity }) =>\n      theme.notification[severity].closeButton.active.bgd};\n    color: ${({ theme, severity }) =>\n      theme.notification[severity].closeButton.active.text};\n  }\n\n  ${baseSpacing}\n  ${baseStyles}\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../utils/style';\n\nexport const StyledNotificationGroup = styled.div.withConfig(\n  defaultStyledConfig\n)`\n  position: fixed;\n  top: 2rem;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  z-index: ${(props) => props.theme.zIndex.notificationGroup};\n  pointer-events: none;\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../utils/style';\nimport { baseSpacing, baseStyles } from '../Base';\n\nexport const StyledWrapper = styled.div.withConfig(defaultStyledConfig)`\n  position: relative;\n\n  .ch-select-icon {\n    pointer-events: none;\n  }\n\n  ${baseSpacing}\n  ${baseStyles}\n`;\n\nexport const StyledSelectInput = styled.select.withConfig(defaultStyledConfig)`\n  background-color: ${(props) => props.theme.inputs.bgd};\n  border: ${(props) => props.theme.inputs.border};\n  border-radius: ${(props) => props.theme.inputs.borderRadius};\n  box-shadow: ${(props) => props.theme.inputs.shadow};\n  color: ${(props) => props.theme.inputs.fontColor};\n  font-size: ${(props) => props.theme.fontSizes.text.fontSize};\n  line-height: ${(props) => props.theme.fontSizes.text.lineHeight};\n  height: 2rem;\n  letter-spacing: -0.005625rem;\n  width: 100%;\n  padding: 0.375rem 1.5rem 0.375rem 0.5rem;\n  transition: box-shadow 0.05s ease-in;\n  display: inline-block;\n  appearance: none;\n\n  &:focus,\n  &[aria-invalid='true']:focus {\n    border: ${(props) => props.theme.inputs.focus.border};\n    box-shadow: ${(props) => props.theme.inputs.focus.shadow};\n    outline: none;\n  }\n\n  &[aria-invalid='true'] {\n    border: ${(props) => props.theme.inputs.error.border};\n    box-shadow: ${(props) => props.theme.inputs.error.shadow};\n  }\n\n  ${baseSpacing}\n  ${baseStyles}\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../utils/style';\n\nexport const StyledTextarea = styled.textarea.withConfig(defaultStyledConfig)`\n  background-color: ${(props) => props.theme.inputs.bgd};\n  border: ${(props) => props.theme.inputs.border};\n  border-radius: ${(props) => props.theme.inputs.borderRadius};\n  box-shadow: ${(props) => props.theme.inputs.shadow};\n  color: ${(props) => props.theme.inputs.fontColor};\n  font-size: ${(props) => props.theme.fontSizes.text.fontSize};\n  padding: 0.5rem;\n  position: relative;\n  min-height: 4rem;\n  transition: box-shadow 0.05s ease-in;\n  width: 100%;\n\n  &:focus,\n  &[aria-invalid='true']:focus {\n    border: ${(props) => props.theme.inputs.focus.border};\n    box-shadow: ${(props) => props.theme.inputs.focus.shadow};\n    outline: none;\n  }\n\n  &[aria-invalid='true'] {\n    border: ${(props) => props.theme.inputs.error.border};\n    box-shadow: ${(props) => props.theme.inputs.error.shadow};\n  }\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { fadeAnimation } from '../../../utils/animations';\nimport { defaultStyledConfig } from '../../../utils/style';\nimport { Props } from './';\n\nexport const StyledUserActivityManager = styled.div.withConfig(\n  defaultStyledConfig\n)<Props>`\n  z-index: ${(props) =>\n    props.isActive ? props.theme.zIndex.controlBar : '-10'};\n  visibility: ${(props) => (props.isActive ? 'visible' : 'hidden')};\n\n  &.ch-active {\n    animation: ${fadeAnimation} 0.25s ease 0s forwards;\n  }\n`;\n"],"names":[],"sourceRoot":""}