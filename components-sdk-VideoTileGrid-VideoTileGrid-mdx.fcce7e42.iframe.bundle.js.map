{"version":3,"file":"components-sdk-VideoTileGrid-VideoTileGrid-mdx.fcce7e42.iframe.bundle.js","mappings":";AAkBA;AAGA;ACbA;AAGA","sources":["webpack://amazon-chime-sdk-component-library-react/./src/components/sdk/LocalVideo/index.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/ContentTile/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nimport { useApplyVideoObjectFit } from '../../../hooks/useApplyVideoObjectFit';\nimport { useAudioVideo } from '../../../providers/AudioVideoProvider';\nimport { useLocalVideo } from '../../../providers/LocalVideoProvider';\nimport VideoTile from '../../ui/VideoTile';\nimport { BaseSdkProps } from '../Base';\n\ninterface Props extends BaseSdkProps {\n  id?: string;\n  nameplate?: string;\n}\n\nconst StyledLocalVideo = styled<any>(VideoTile)`\n  ${(props) => (!props.active ? 'display: none' : '')};\n`;\n\nexport const LocalVideo: React.FC<React.PropsWithChildren<Props>> = ({\n  nameplate,\n  ...rest\n}) => {\n  const { tileId, isVideoEnabled } = useLocalVideo();\n  const audioVideo = useAudioVideo();\n  const videoEl = useRef<HTMLVideoElement>(null);\n  useApplyVideoObjectFit(videoEl);\n\n  useEffect(() => {\n    if (!audioVideo || !tileId || !videoEl.current || !isVideoEnabled) {\n      return;\n    }\n\n    audioVideo.bindVideoElement(tileId, videoEl.current);\n\n    return () => {\n      const tile = audioVideo.getVideoTile(tileId);\n      if (tile) {\n        audioVideo.unbindVideoElement(tileId);\n      }\n    };\n  }, [audioVideo, tileId, isVideoEnabled]);\n\n  return (\n    <StyledLocalVideo\n      active={isVideoEnabled}\n      nameplate={nameplate}\n      ref={videoEl}\n      {...rest}\n    />\n  );\n};\n\nexport default LocalVideo;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { VideoTile } from '../../ui/VideoTile';\n\nexport const ContentTile = styled(VideoTile)`\n  background-color: ${({ theme }) => theme.colors.greys.grey80};\n`;\n\nexport default ContentTile;\n"],"names":[],"sourceRoot":""}