{"version":3,"file":"components-ui-Notification-Notification-stories.cabcfb7d.iframe.bundle.js","mappings":";AAYA;AACA;;;;;;;;;;;;;;;;;AAiBA;AACA;;;;;AAKA;AACA;AACA;;AAEA;AACA;AAGA;AACA;AAIA;AAIA;AAIA;;;AAGA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;;;AAIA;;;;AAIA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;;AAKA;AACA;AAIA;AAIA;AAIA;;;AAGA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;;;AAIA;;;;AAIA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;;AAKA;;;AAKA;;;AAIA;;;AAMA;AACA;AAIA;AAIA;AAIA;;;;;AAKA;;;;AAIA;AACA;;;;;AAKA;AAIA;AACA;AACA;AAIA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;;;;;AAQA;;AAIA;;;;;;;ACpLA;AA3BA;;;AA8BA;;;;;;;;;;AACA;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;;;;AClDA;AAEA;AAEA;;AAGA;AACA;AACA;AAEA;;;AAIA;AACA;;;;;;ACLA;AACA;;AAEA;;;;;;;;;;;;;;AAcA;AACA;;;;;;;;;AASA;;AAEA;;;AAGA;AACA;AACA;AAEA;;;AAIA;AACA;AAEA;;;AAIA;AACA;AAEA;;;AAIA;AACA","sources":["webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Button/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Flex/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Heading/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Notification/Styled.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled, { css } from 'styled-components';\n\nimport { defaultStyledConfig, visuallyHidden } from '../../../utils/style';\nimport { baseSpacing, baseStyles } from '../Base';\nimport { ButtonProps } from './';\n\nexport const StyledButton = styled.button.withConfig(\n  defaultStyledConfig\n)<ButtonProps>`\n  border-radius: ${(props) => props.theme.radii.default};\n  font-size: ${(props) => props.theme.fontSizes.text.fontSize};\n  padding: 0.5rem 1rem;\n  border-color: transparent;\n  transition: background-color 0.1s ease;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  .ch-icon {\n    width: ${(props) => props.theme.iconButtonSizes[props.iconSize || 'sm']};\n    height: ${(props) => props.theme.iconButtonSizes[props.iconSize || 'sm']};\n    margin-right: 0.25rem;\n  }\n\n  /* variant styles */\n  ${(props) => props.variant === 'primary' && StyledPrimaryButton}\n  ${(props) => props.variant === 'secondary' && StyledSecondaryButton}\n  ${(props) => props.variant === 'icon' && StyledIconButton}\n\n  ${baseSpacing}\n  ${baseStyles}\n`;\n\nexport const StyledPrimaryButton = css<ButtonProps>`\n  background-color: ${(props) =>\n    props.selected\n      ? props.theme.buttons.primary.selected.bgd\n      : props.theme.buttons.primary.static.bgd};\n  color: ${(props) =>\n    props.selected\n      ? props.theme.buttons.primary.selected.text\n      : props.theme.buttons.primary.static.text};\n  border: ${(props) =>\n    props.selected\n      ? props.theme.buttons.primary.selected.border\n      : props.theme.buttons.primary.static.border};\n  box-shadow: ${(props) => props.theme.buttons.primary.static.shadow};\n\n  &:focus {\n    background-color: ${(props) => props.theme.buttons.primary.focus.bgd};\n    border: ${(props) => props.theme.buttons.primary.focus.border};\n    color: ${(props) => props.theme.buttons.primary.focus.text};\n    box-shadow: ${(props) => props.theme.buttons.primary.focus.shadow};\n  }\n\n  &:hover {\n    background-color: ${(props) => props.theme.buttons.primary.hover.bgd};\n    border: ${(props) => props.theme.buttons.primary.hover.border};\n    color: ${(props) => props.theme.buttons.primary.hover.text};\n    box-shadow: ${(props) => props.theme.buttons.primary.hover.shadow};\n  }\n\n  &:focus:hover {\n    box-shadow: ${(props) => props.theme.buttons.primary.focus.shadow};\n  }\n\n  &:active {\n    background-color: ${(props) => props.theme.buttons.primary.active.bgd};\n    border: ${(props) => props.theme.buttons.primary.active.border};\n    color: ${(props) => props.theme.buttons.primary.active.text};\n    box-shadow: ${(props) => props.theme.buttons.primary.active.shadow};\n  }\n\n  &:disabled {\n    background-color: ${(props) => props.theme.buttons.primary.disabled.bgd};\n    border: ${(props) => props.theme.buttons.primary.disabled.border};\n    color: ${(props) => props.theme.buttons.primary.disabled.text};\n    cursor: not-allowed;\n  }\n`;\n\nexport const StyledSecondaryButton = css<ButtonProps>`\n  background-color: ${(props) =>\n    props.selected\n      ? props.theme.buttons.secondary.selected.bgd\n      : props.theme.buttons.secondary.static.bgd};\n  color: ${(props) =>\n    props.selected\n      ? props.theme.buttons.secondary.selected.text\n      : props.theme.buttons.secondary.static.text};\n  border: ${(props) =>\n    props.selected\n      ? props.theme.buttons.secondary.selected.border\n      : props.theme.buttons.secondary.static.border};\n  box-shadow: ${(props) => props.theme.buttons.secondary.shadow};\n\n  &:focus {\n    background-color: ${(props) => props.theme.buttons.secondary.focus.bgd};\n    border: ${(props) => props.theme.buttons.secondary.focus.border};\n    color: ${(props) => props.theme.buttons.secondary.focus.text};\n    box-shadow: ${(props) => props.theme.buttons.secondary.focus.shadow};\n  }\n\n  &:hover {\n    background-color: ${(props) => props.theme.buttons.secondary.hover.bgd};\n    border: ${(props) => props.theme.buttons.secondary.hover.border};\n    color: ${(props) => props.theme.buttons.secondary.hover.text};\n    box-shadow: ${(props) => props.theme.buttons.secondary.hover.shadow};\n  }\n\n  &:focus:hover {\n    box-shadow: ${(props) => props.theme.buttons.secondary.focus.shadow};\n  }\n\n  &:active {\n    background-color: ${(props) => props.theme.buttons.secondary.active.bgd};\n    border: ${(props) => props.theme.buttons.secondary.active.border};\n    color: ${(props) => props.theme.buttons.secondary.active.text};\n    box-shadow: ${(props) => props.theme.buttons.secondary.focus.shadow};\n  }\n\n  &:disabled {\n    background-color: ${(props) => props.theme.buttons.secondary.disabled.bgd};\n    border: ${(props) => props.theme.buttons.secondary.disabled.border};\n    color: ${(props) => props.theme.buttons.secondary.disabled.text};\n    cursor: not-allowed;\n  }\n`;\n\nconst badgeLayout = {\n  sm: css`\n    top: -15%;\n    left: 76%;\n  `,\n  md: css`\n    top: 4%;\n    left: 76%;\n  `,\n  lg: css`\n    top: 10%;\n    left: 76%;\n  `,\n};\n\nexport const StyledIconButton = css<ButtonProps>`\n  background-color: ${(props) =>\n    props.selected\n      ? props.theme.buttons.icon.selected.bgd\n      : props.theme.buttons.icon.static.bgd};\n  color: ${(props) =>\n    props.selected\n      ? props.theme.buttons.icon.selected.text\n      : props.theme.buttons.icon.static.text};\n  border: ${(props) =>\n    props.selected\n      ? props.theme.buttons.icon.selected.border\n      : props.theme.buttons.icon.static.border};\n  border-radius: ${(props) => props.theme.radii.circle};\n  padding: 0.1875rem;\n  position: relative;\n\n  > .ch-label {\n    ${visuallyHidden};\n  }\n\n  > .ch-icon {\n    width: ${(props) => props.theme.iconButtonSizes[props.iconSize || 'sm']};\n    height: ${(props) => props.theme.iconButtonSizes[props.iconSize || 'sm']};\n    margin: 0;\n  }\n\n  &:focus {\n    background-color: ${({ theme, selected }) =>\n      selected\n        ? theme.buttons.icon.selected.bgd\n        : theme.buttons.icon.static.bgd};\n    border: ${(props) => props.theme.buttons.icon.focus.border};\n    color: ${(props) => props.theme.buttons.icon.focus.text};\n    color: ${({ theme, selected }) =>\n      selected\n        ? theme.buttons.icon.selected.text\n        : theme.buttons.icon.static.text};\n    box-shadow: ${(props) => props.theme.buttons.icon.focus.shadow};\n  }\n\n  &:hover {\n    background-color: ${(props) => props.theme.buttons.icon.hover.bgd};\n    border: ${(props) => props.theme.buttons.icon.hover.border};\n    color: ${(props) => props.theme.buttons.icon.hover.text};\n  }\n\n  &:active {\n    background-color: ${(props) => props.theme.buttons.icon.active.bgd};\n    border: ${(props) => props.theme.buttons.icon.active.border};\n    color: ${(props) => props.theme.buttons.icon.active.text};\n  }\n\n  &:disabled {\n    background-color: ${(props) => props.theme.buttons.icon.disabled.bgd};\n    border: ${(props) => props.theme.buttons.icon.disabled.border};\n    color: ${(props) => props.theme.buttons.icon.disabled.text};\n    cursor: not-allowed;\n  }\n\n  + * {\n    position: absolute;\n    font-size: 0.55rem;\n    z-index: 1;\n    ${({ iconSize }) => (iconSize ? badgeLayout[iconSize] : badgeLayout['sm'])}\n  }\n`;\n\nexport const StyledIconButtonWrapper = styled.span.withConfig(\n  defaultStyledConfig\n)`\n  display: inline-block;\n  position: relative;\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled, { css } from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../utils/style';\nimport { baseSpacing, baseStyles } from '../Base';\nimport { FlexProps } from './';\n\nexport const fillSpace = css`\n  display: flex;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const fillSpaceCentered = css`\n  ${fillSpace};\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const equalColumns = css`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  align-items: stretch;\n\n  > * {\n    flex-grow: 1;\n    flex-basis: 50%;\n  }\n`;\n\nexport const stack = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  > * {\n    width: 100%;\n  }\n`;\n\nconst layoutMap = {\n  'fill-space': fillSpace,\n  'fill-space-centered': fillSpaceCentered,\n  'equal-columns': equalColumns,\n  stack,\n};\n\nexport const StyledFlex = styled.div.withConfig(defaultStyledConfig)<FlexProps>`\n  align-items: ${(props) => props.alignItems};\n  display: ${(props) => (props.container ? 'flex' : 'block')};\n  flex: ${(props) => props.flex || ''};\n  flex-basis: ${(props) => props.flexBasis};\n  flex-direction: ${(props) => props.flexDirection};\n  flex-grow: ${(props) => props.flexGrow || ''};\n  flex-shrink: ${(props) => props.flexShrink};\n  flex-wrap: ${(props) => props.flexWrap};\n  justify-content: ${(props) => props.justifyContent};\n\n  // layout variants\n  ${(props) => !!props.layout && layoutMap[props.layout]}\n\n  ${baseSpacing}\n  ${baseStyles}\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../utils/style';\nimport { baseSpacing, baseStyles } from '../Base';\nimport { HeadingProps } from './';\n\nexport const StyledHeading = styled.h1.withConfig(\n  defaultStyledConfig\n)<HeadingProps>`\n  display: block;\n  margin: 0;\n\n  font-size: ${(props) =>\n    props.theme.fontSizes[`h${props.level}`].mobile.fontSize};\n  font-weight: ${(props) =>\n    props.theme.fontSizes[`h${props.level}`].mobile.fontWeight};\n  line-height: ${(props) =>\n    props.theme.fontSizes[`h${props.level}`].mobile.lineHeight};\n\n  ${({ theme }) => theme.mediaQueries.min.md} {\n    font-size: ${(props) => props.theme.fontSizes[`h${props.level}`].fontSize};\n    font-weight: ${(props) =>\n      props.theme.fontSizes[`h${props.level}`].fontWeight};\n    line-height: ${(props) =>\n      props.theme.fontSizes[`h${props.level}`].lineHeight};\n  }\n\n  ${baseSpacing}\n  ${baseStyles}\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { Severity } from '../../../providers/NotificationProvider';\nimport { defaultStyledConfig } from '../../../utils/style';\nimport { baseSpacing, baseStyles } from '../Base';\nimport IconButton from '../Button/IconButton';\nimport SecondaryButton from '../Button/SecondaryButton';\nimport { NotificationProps } from '.';\n\ninterface StyledNotificationProps extends NotificationProps {\n  severity: Severity;\n}\n\nexport const StyledCloseIconButton = styled(IconButton)``;\nexport const StyledNotificationButton = styled(SecondaryButton)``;\n\nexport const StyledNotification = styled.div.withConfig(\n  defaultStyledConfig\n)<StyledNotificationProps>`\n  align-items: center;\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  color: ${({ theme, severity }) => theme.notification[severity].text};\n  background-color: ${({ theme, severity }) => theme.colors[severity].primary};\n  padding: 0.75rem;\n  box-shadow: ${({ theme }) => theme.notification.shadow};\n  border-radius: 0.25rem;\n  margin: 0.75rem;\n  max-width: 45rem;\n  pointer-events: auto;\n\n  .ch-severity-icon {\n    width: 1.5rem;\n    flex-shrink: 0;\n  }\n\n  .ch-message {\n    display: flex;\n    flex-flow: column wrap;\n    font-size: ${(props) => props.theme.fontSizes.text.fontSize};\n    line-height: ${(props) => props.theme.fontSizes.text.lineHeight};\n    letter-spacing: -0.005625rem;\n    margin: 0.5rem 0.75rem;\n\n    &:empty {\n      margin: 0;\n    }\n  }\n\n  ${StyledNotificationButton} {\n    margin-right: 1.6rem;\n    border-color: ${({ theme, severity }) => theme.notification[severity].text};\n  }\n\n  ${StyledCloseIconButton},\n  ${StyledNotificationButton} {\n    background-color: ${({ theme, severity }) =>\n      theme.colors[severity].primary};\n    color: ${({ theme, severity }) =>\n      theme.notification[severity].closeButton.text};\n  }\n\n  ${StyledCloseIconButton}:hover, ${StyledCloseIconButton}:focus, ${StyledNotificationButton}:hover, ${StyledNotificationButton}:focus {\n    background-color: ${({ theme, severity }) =>\n      theme.notification[severity].closeButton.hover.bgd};\n    color: ${({ theme, severity }) =>\n      theme.notification[severity].closeButton.hover.text};\n  }\n\n  ${StyledCloseIconButton}:active, ${StyledNotificationButton}:active {\n    background-color: ${({ theme, severity }) =>\n      theme.notification[severity].closeButton.active.bgd};\n    color: ${({ theme, severity }) =>\n      theme.notification[severity].closeButton.active.text};\n  }\n\n  ${baseSpacing}\n  ${baseStyles}\n`;\n"],"names":[],"sourceRoot":""}