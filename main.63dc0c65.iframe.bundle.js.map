{"version":3,"file":"main.63dc0c65.iframe.bundle.js","mappings":";AAQA;;;;;;;;;AASA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;;;;AAMA;;;;;AAYA","sources":["webpack://amazon-chime-sdk-component-library-react/./src/theme/GlobalStyles.ts","webpack://amazon-chime-sdk-component-library-react/./src/utils/style.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { createGlobalStyle } from 'styled-components';\n\nimport { StyledReset } from './StyledReset';\n\nexport const GlobalStyles = createGlobalStyle`\n  ${StyledReset};\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  html {\n    font-size: ${(props) => props.theme.fontSizes.baseFontSize};\n    font-family: ${(props) => props.theme.fonts.body};;\n    background-color: ${(props) => props.theme.globalStyle.bgd};\n    color: ${(props) => props.theme.globalStyle.text};\n    min-height: 100%;\n  }\n`;\n\nexport default GlobalStyles;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport isPropValid from '@emotion/is-prop-valid';\nimport { css } from 'styled-components';\n\n// use for elements that contain text for screen readers, but need no visual representation\nexport const visuallyHidden = css`\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n  position: absolute !important;\n`;\n\nexport const ellipsis = css`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nexport const absoluteCenter = css`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const isValidCSSHex = (hex: string): boolean => {\n  // matches 6 digit characters prefixed with a '#'.\n  return /^#[0-9A-F]{6}$/i.test(hex);\n};\n\nexport const hexTorgba = (hex: string, alpha: number = 1): string => {\n  if (!isValidCSSHex(hex)) {\n    return '';\n  }\n\n  const [r, g, b]: any = hex.match(/\\w\\w/g)?.map((h) => parseInt(h, 16));\n  return `rgba(${r}, ${g}, ${b}, ${alpha || 1})`;\n};\n\n// There's a breaking change in styled-components v6 - shouldForwardProp is no longer provided by default\n// https://styled-components.com/docs/faqs#shouldforwardprop-is-no-longer-provided-by-default\n// This maintains backwards compatibility with v5 by filtering props using @emotion/is-prop-valid\n// https://styled-components.com/docs/faqs#shouldforwardprop-is-no-longer-provided-by-default\n\n/**\n * Creates a configuration object for styled-components to control prop forwarding\n * @param additionalProps - Array of custom prop names that should be forwarded\n * @returns Configuration object with shouldForwardProp function\n */\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const createStyledConfig = (additionalProps: string[] = []) => ({\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  shouldForwardProp: (prop: string) => {\n    // Forward custom props\n    if (additionalProps.includes(prop)) return true;\n\n    return isPropValid(prop);\n  },\n});\n\nexport const defaultStyledConfig = createStyledConfig();\n"],"names":[],"sourceRoot":""}