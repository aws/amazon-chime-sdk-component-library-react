{"version":3,"file":"components-ui-Input-Input-stories.6a041696.iframe.bundle.js","mappings":";;;;;;;;;;;;;AA+BA;;AAIA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;AAKA;AACA;;;;;AAKA;AACA;;;;;;;;;;;;;;;;;;AAkBA;AACA;AAOA;;;;;;;;AAUA;;;AAGA","sources":["webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Input/Styled.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../utils/style';\nimport { baseSpacing, baseStyles } from '../Base';\nimport { InputWrapperProps } from './InputWrapper';\n\nconst getPadding = (props: InputWrapperProps) => {\n  const { sizing, leadingIcon } = props;\n  return sizing === 'sm'\n    ? `0.125rem 1.75rem 0.125rem ${leadingIcon ? '1.3125rem' : '0.5rem'}`\n    : `0.34375rem 1.75rem 0.34375rem ${leadingIcon ? '1.3125rem' : '0.5rem'}`;\n};\n\nexport const StyledInputWrapper = styled.span.withConfig(\n  defaultStyledConfig\n)<InputWrapperProps>`\n  position: relative;\n\n  > .ch-icon {\n    position: absolute;\n    width: 1rem;\n    left: 0.1875rem;\n    position: absolute;\n    top: 54%;\n    transform: translateY(-50%);\n  }\n\n  > input {\n    padding: ${(props) => getPadding(props)};\n  }\n`;\n\nexport const StyledInput = styled.input.withConfig(defaultStyledConfig)`\n  align-items: center;\n  display: flex;\n  letter-spacing: -0.005625rem;\n  transition: box-shadow 0.05s ease-in;\n  background-color: ${(props) => props.theme.inputs.bgd};\n  border: ${(props) => props.theme.inputs.border};\n  border-radius: ${(props) => props.theme.inputs.borderRadius};\n  box-shadow: ${(props) => props.theme.inputs.shadow};\n  color: ${(props) => props.theme.inputs.fontColor};\n  font-size: ${(props) => props.theme.fontSizes.text.fontSize};\n  line-height: ${(props) => props.theme.fontSizes.text.lineHeight};\n\n  &::placeholder {\n    color: ${(props) => props.theme.inputs.placeholder};\n  }\n\n  &:focus,\n  &[aria-invalid='true']:focus {\n    border: ${(props) => props.theme.inputs.focus.border};\n    box-shadow: ${(props) => props.theme.inputs.focus.shadow};\n    outline: none;\n  }\n\n  &[aria-invalid='true'] {\n    border: ${(props) => props.theme.inputs.error.border};\n    box-shadow: ${(props) => props.theme.inputs.error.shadow};\n  }\n\n  // Hides native clear button\n  &::-webkit-search-decoration,\n  &::-webkit-search-cancel-button,\n  &::-webkit-search-results-button,\n  &::-webkit-search-results-decoration {\n    display: none;\n  }\n\n  &::-ms-clear,\n  &::-ms-reveal {\n    display: none;\n    width: 0;\n    height: 0;\n  }\n\n  ${baseSpacing}\n  ${baseStyles}\n`;\n\ninterface ClearProps {\n  active: boolean;\n}\n\nexport const StyledClear = styled.button.withConfig(\n  defaultStyledConfig\n)<ClearProps>`\n  position: absolute;\n  top: 50%;\n  right: 0.125rem;\n  transform: translateY(-44%);\n  border: none;\n  background: none;\n  cursor: pointer;\n  display: ${(props) => (props.active ? 'block' : 'none')};\n\n  path {\n    fill: ${(props) => props.theme.inputs.clearBg};\n  }\n\n  &:active,\n  &:focus {\n    outline: none;\n  }\n`;\n"],"names":[],"sourceRoot":""}