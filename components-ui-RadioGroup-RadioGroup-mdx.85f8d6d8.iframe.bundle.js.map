{"version":3,"file":"components-ui-RadioGroup-RadioGroup-mdx.85f8d6d8.iframe.bundle.js","mappings":";;;;AA2CA;AA3BA;;;AA8BA;;;;;;;;;;AACA;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;ACxDA;AACA;AACA;;AAEA;AACA;;ACFA;;;AAGA;AACA;;AAIA;;;;AAKA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAIA;;;;;;;AAOA;AAIA;;;;;;AAMA;;AAIA;;;;;AAKA;;;;AAIA;;AAEA","sources":["webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Flex/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Label/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Radio/Styled.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled, { css } from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../utils/style';\nimport { baseSpacing, baseStyles } from '../Base';\nimport { FlexProps } from './';\n\nexport const fillSpace = css`\n  display: flex;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const fillSpaceCentered = css`\n  ${fillSpace};\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const equalColumns = css`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  align-items: stretch;\n\n  > * {\n    flex-grow: 1;\n    flex-basis: 50%;\n  }\n`;\n\nexport const stack = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  > * {\n    width: 100%;\n  }\n`;\n\nconst layoutMap = {\n  'fill-space': fillSpace,\n  'fill-space-centered': fillSpaceCentered,\n  'equal-columns': equalColumns,\n  stack,\n};\n\nexport const StyledFlex = styled.div.withConfig(defaultStyledConfig)<FlexProps>`\n  align-items: ${(props) => props.alignItems};\n  display: ${(props) => (props.container ? 'flex' : 'block')};\n  flex: ${(props) => props.flex || ''};\n  flex-basis: ${(props) => props.flexBasis};\n  flex-direction: ${(props) => props.flexDirection};\n  flex-grow: ${(props) => props.flexGrow || ''};\n  flex-shrink: ${(props) => props.flexShrink};\n  flex-wrap: ${(props) => props.flexWrap};\n  justify-content: ${(props) => props.justifyContent};\n\n  // layout variants\n  ${(props) => !!props.layout && layoutMap[props.layout]}\n\n  ${baseSpacing}\n  ${baseStyles}\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { defaultStyledConfig } from '../../../utils/style';\nimport { baseSpacing, baseStyles } from '../Base';\n\nexport const StyledLabel = styled.label.withConfig(defaultStyledConfig)`\n  color: ${(props) => props.theme.inputs.fontColor};\n  font-size: ${(props) => props.theme.fontSizes.label.fontSize};\n  line-height: ${(props) => props.theme.fontSizes.label.lineHeight};\n\n  ${baseSpacing}\n  ${baseStyles}\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport {\n  absoluteCenter,\n  defaultStyledConfig,\n  visuallyHidden,\n} from '../../../utils/style';\n\nexport const HiddenRadio = styled.input.withConfig(defaultStyledConfig)`\n  ${visuallyHidden};\n\n  &[aria-invalid='true'] + .ch-radio {\n    border: ${(props) => props.theme.inputs.error.border};\n    box-shadow: ${(props) => props.theme.inputs.error.shadow};\n  }\n`;\n\nexport const StyledRadioWrapper = styled.span.withConfig(defaultStyledConfig)`\n  > label {\n    margin-left: 0.5rem;\n  }\n`;\nexport const StyledRadio = styled.div.withConfig(defaultStyledConfig)<any>`\n  background-color: ${(props) => props.theme.inputs.bgd};\n  border: ${(props) => props.theme.inputs.border};\n  border-radius: ${(props) => props.theme.radii.circle};\n  box-shadow: ${(props) => props.theme.inputs.shadow};\n  margin-bottom: -0.1875rem;\n  transition: box-shadow 0.05s ease-in;\n\n  ${HiddenRadio}:checked ~ & {\n    background-color: ${(props) => props.theme.inputs.checked.bgd};\n    border: ${(props) => props.theme.inputs.checked.border};\n    box-shadow: ${(props) => props.theme.inputs.checked.shadow};\n  }\n\n  ${HiddenRadio}:focus ~ & {\n    border: ${(props) => props.theme.inputs.focus.border};\n    box-shadow: ${(props) => props.theme.inputs.focus.shadow};\n  }\n`;\n\nexport const StyledRadioLabel = styled(StyledRadio)<any>`\n  display: inline-block;\n  height: 1rem;\n  position: relative;\n  width: 1rem;\n\n  &:after {\n    background-color: ${(props) =>\n      props.checked\n        ? props.theme.inputs.checked.fontColor\n        : props.theme.inputs.bgd};\n    border-radius: ${(props) => props.theme.radii.circle};\n    content: '';\n    display: block;\n    height: 0.375rem;\n    padding: 0.03125rem;\n    width: 0.375rem;\n    ${absoluteCenter};\n  }\n`;\n\nexport const StyledRadioIcon = styled(StyledRadio)<any>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.5rem;\n  border-color: ${(props) => props.theme.colors.greys.white};\n  box-shadow: none;\n  margin: 0.1rem;\n\n  ${HiddenRadio}:checked ~ & {\n    svg {\n      stroke: ${(props) => props.theme.colors.greys.white};\n    }\n  }\n`;\n"],"names":[],"sourceRoot":""}